generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model answers {
  id          Int       @id @default(autoincrement())
  company_id  Int
  question_id Int
  answer_text String?
  answered_at DateTime  @default(now()) @db.Timestamp(6)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  questions   questions @relation(fields: [question_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([company_id, question_id])
  @@index([company_id], map: "idx_answers_company")
}

model forms {
  id           Int         @id @default(autoincrement())
  name         String      @db.VarChar(100)
  description  String?     @db.VarChar(255)
  created_date DateTime    @default(dbgenerated("CURRENT_DATE")) @db.Date
  active       Boolean     @default(true)
  created_at   DateTime    @default(now()) @db.Timestamp(6)
  updated_at   DateTime    @default(now()) @db.Timestamp(6)
  inquiries    inquiries[]
  questions    questions[]
}

model inquiries {
  id                Int                @id @default(autoincrement())
  company_id        Int
  form_id           Int?
  question_id       Int?
  user_id           Int
  inquiry_text      String
  inquiry_date      DateTime           @default(now()) @db.Timestamp(6)
  created_at        DateTime           @default(now()) @db.Timestamp(6)
  updated_at        DateTime           @default(now()) @db.Timestamp(6)
  forms             forms?             @relation(fields: [form_id], references: [id], onUpdate: NoAction)
  questions         questions?         @relation(fields: [question_id], references: [id], onUpdate: NoAction)
  inquiry_responses inquiry_responses?
}

model inquiry_responses {
  id            Int       @id @default(autoincrement())
  inquiry_id    Int       @unique
  user_id       Int
  response_text String
  response_date DateTime  @default(now()) @db.Timestamp(6)
  created_at    DateTime  @default(now()) @db.Timestamp(6)
  updated_at    DateTime  @default(now()) @db.Timestamp(6)
  inquiries     inquiries @relation(fields: [inquiry_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model questions {
  id          Int         @id @default(autoincrement())
  form_id     Int
  number      Int
  text        String
  topic_id    Int?
  subtopic_id Int?
  objective   String?
  note        String?
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  answers     answers[]
  inquiries   inquiries[]
  forms       forms       @relation(fields: [form_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  subtopics   subtopics?  @relation(fields: [subtopic_id], references: [id], onUpdate: NoAction)
  topics      topics?     @relation(fields: [topic_id], references: [id], onUpdate: NoAction)
}

model subtopics {
  id          Int         @id @default(autoincrement())
  topic_id    Int
  name        String      @db.VarChar(100)
  description String?     @db.VarChar(255)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  questions   questions[]
  topics      topics      @relation(fields: [topic_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model topics {
  id          Int         @id @default(autoincrement())
  name        String      @db.VarChar(100)
  description String?     @db.VarChar(255)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  questions   questions[]
  subtopics   subtopics[]
}
